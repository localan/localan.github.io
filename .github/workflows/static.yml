# Simple workflow for deploying static content to GitHub Pages
name: Build and deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: .
          destination: ./_site
      - name: Verify Jekyll output
        run: |
          test -f _site/index.html
          test -f _site/notes/index.html
          # Ensure Liquid was rendered by checking the sample note title exists in the notes index
          if ! grep -q "Hello, Obsidian" _site/notes/index.html; then
            echo "Notes index does not list sample note. Jekyll may not have rendered correctly." >&2
            echo "Inspect _site/notes/index.html for unrendered Liquid or misconfiguration." >&2
            exit 1
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
